name: Upload Package

on:
  release:
    types: [created]

env:
  POETRY_VERSION: 1.1.7
  PYTHON_VERSION: 3.7

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Cache poetry installation
        id: cache-poetry
        uses: actions/cache@v2
        with:
            path: ~/.local
            key: poetry-${{ runner.os }}-${{ env.POETRY_VERSION }}-${{ hashFiles('.github/workflows/pubilsh-release.yml') }}
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - --version=${{ env.POETRY_VERSION }}
      - name: Setup poetry environment
        id: setup-poetry-env
        run: |
            poetry env use $(which python)
            echo "::set-output name=poetry-env::$(poetry env info --path)"
      - name: Cache poetry virtual environment
        id: cache-poetry-venv
        uses: actions/cache@v2
        with:
            path: ${{ steps.setup-poetry-env.outputs.poetry-env }}
            key: poetry-env-${{ runner.os }}-${{ env.POETRY_VERSION }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('.github/workflows/publish-release.yml') }}
      - name: Install dependencies
        if: steps.cache-poetry-venv.outputs.cache-hit != 'true'
        run: |
            poetry install
      - name: Sanity check (run tests)
        run: |
          poetry run pytest
      - name: Build package
        run: |
          poetry build
      - name: Publish package
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{secrets.pypi_upload}}
        run: |
          poetry publish
